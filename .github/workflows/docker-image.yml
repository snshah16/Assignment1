name: Build and Push Docker Images


on:
  push:
    branches: [ main ] 

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

     # Step 2: Set up AWS credentials for ECR login
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}  # Include session token
          aws-region: us-east-1
          
    # Step 3: Login to Amazon ECR and Capture Registry URI
      - name: Login to Amazon ECR
        id: login-ecr  # ID to reference outputs from this step
        uses: aws-actions/amazon-ecr-login@v1
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}  
          AWS_REGION: us-east-1  
          
    # Step 4: Build, Tag, and Push MySQL Docker Image
      - name: Build, Tag, and Push MySQL Docker Image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}  # Use the output from the login step
          ECR_REPOSITORY: my-sql-image  
          IMAGE_TAG: v1 
        run: |
          cd database
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  # Step 5: Build, Tag, and Push Application Docker Image
      - name: Build, Tag, and Push Application Docker Image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}  # Use the output from the login step
          ECR_REPOSITORY: my-app-image  
          IMAGE_TAG: v1  
        run: |
          cd app  # Change to the 'app' directory
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
